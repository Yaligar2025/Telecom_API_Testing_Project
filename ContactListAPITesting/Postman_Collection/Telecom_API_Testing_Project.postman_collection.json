{
	"info": {
		"_postman_id": "b70dfe52-53eb-4f56-b0ad-a6c268708ce3",
		"name": "Telecom_API_Testing_Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24452511",
		"_collection_link": "https://speeding-star-897728.postman.co/workspace/SA2502049~71c8fc3b-9ee8-4ffa-96b9-116129c1f4d6/collection/24452511-b70dfe52-53eb-4f56-b0ad-a6c268708ce3?action=share&source=collection_link&creator=24452511"
	},
	"item": [
		{
			"name": "Add New User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let res = pm.response;\r",
							"\r",
							"pm.test(\"User created successfully and status code is 201\", () => {\r",
							"   pm.expect(res.code).to.eql(201);\r",
							"})\r",
							"\r",
							"pm.test(\"User created successfully and status message is Created\", () => {\r",
							"    pm.expect(res.status).to.eql(\"Created\")\r",
							"})\r",
							"\r",
							"pm.environment.set(\"HerokuTokenID\", res.json().token)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let dtime =  new Date().getTime();\r",
							"let newEmail = \"lakshmisri\" + dtime + \"@gmail.com\";\r",
							"\r",
							"pm.environment.set(\"UserEmail\", newEmail);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstName\": \"Lakshmisri\",\r\n\"lastName\": \"Akula\",\r\n\"email\": \"{{UserEmail}}\",\r\n\"password\": \"Heroku@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let res = pm.response;\r",
							"\r",
							"pm.test(\"User created successfully and status code is 200\", () => {\r",
							"   pm.expect(res.code).to.eql(200);\r",
							"})\r",
							"\r",
							"pm.test(\"User details displayed and status message is OK\", () => {\r",
							"    pm.expect(res.status).to.eql(\"OK\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{HerokuTokenID}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/me",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Updated user details with status code 200\", () => {\r",
							"   pm.expect(pm.response.code).to.eql(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Updated user details with status code OK\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{HerokuTokenID}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstName\": \"Yamuna\",\r\n\"lastName\": \"Anisetti\",\r\n\"email\": \"{{UserEmail}}\",\r\n\"password\": \"Heroku@1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/me",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log In User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let res = pm.response.json();\r",
							"\r",
							"pm.test(\"Loggedin successfully with status code 200\", () => {\r",
							"   pm.expect(pm.response.code).to.eql(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Loggedin successfully with status code OK\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							"\r",
							"pm.environment.set(\"LoginUserTokenID\",res.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\": \"{{UserEmail}}\",\r\n\"password\": \"Heroku@1234\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/login",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Contact added successfully with status code 201\", () => {\r",
							"   pm.expect(pm.response.code).to.eql(201);\r",
							"})\r",
							"\r",
							"pm.test(\"Contact added successfully with status code Created\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"Created\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{LoginUserTokenID}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstName\": \"John\",\r\n\"lastName\": \"Doe\",\r\n\"birthdate\": \"1970-01-01\",\r\n\"email\": \"jdoe@fake.com\",\r\n\"phone\": \"8005555555\",\r\n\"street1\": \"1 Main St.\",\r\n\"street2\": \"Apartment A\",\r\n\"city\": \"Anytown\",\r\n\"stateProvince\": \"KS\",\r\n\"postalCode\": \"12345\",\r\n\"country\": \"USA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Contact List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let res = pm.response.json()\r",
							"pm.test(\"Contact list disaplyed with status code 200\", () => {\r",
							"   pm.expect(pm.response.code).to.eql(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Contact list displayed with status message OK\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							"\r",
							"pm.environment.set(\"Contact ID\", res[0]._id )"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{LoginUserTokenID}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Contact disaplyed with status code 200\", () => {\r",
							"   pm.expect(pm.response.code).to.eql(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Contact displayed with status message OK\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{LoginUserTokenID}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{Contact ID}}",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts",
						"{{Contact ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let res = pm.response.json();\r",
							"\r",
							"pm.test(\"Contact details updated successfully with status code 200\", () => {\r",
							"   pm.expect(pm.response.code).to.eql(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Contact details updated successfully with status message OK\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							"\r",
							"pm.test(\"Validating Email is amiller@fake.com\", () =>{\r",
							"    pm.expect(res.email).to.eql(\"amiller@fake.com\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{LoginUserTokenID}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstName\": \"Amy\",\r\n\"lastName\": \"Miller\",\r\n\"birthdate\": \"1992-02-02\",\r\n\"email\": \"amiller@fake.com\",\r\n\"phone\": \"8005554242\",\r\n\"street1\": \"13 School St.\",\r\n\"street2\": \"Apt. 5\",\r\n\"city\": \"Washington\",\r\n\"stateProvince\": \"QC\",\r\n\"postalCode\": \"A1A1A1\",\r\n\"country\": \"Canada\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{Contact ID}}",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts",
						"{{Contact ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let res = pm.response.json();\r",
							"\r",
							"pm.test(\"Firstname updated successfully with status code 200\", () => {\r",
							"   pm.expect(pm.response.code).to.eql(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Firstname updated successfully with status message OK\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							"\r",
							"pm.test(\"Validating FirstName is Anna\", () =>{\r",
							"    pm.expect(res.firstName).to.eql(\"Anna\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{LoginUserTokenID}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstName\": \"Anna\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{Contact ID}}",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts",
						"{{Contact ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logged out successfully with status code 200\", () => {\r",
							"   pm.expect(pm.response.code).to.eql(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Logged out successfully with status message OK\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{LoginUserTokenID}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/logout",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"logout"
					]
				}
			},
			"response": []
		}
	]
}